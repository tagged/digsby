##################################################
# file: RSIService_client.py
#
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     D:\workspace\digsby\Digsby.py --no-traceback-dialog --multi --server=api5.digsby.org
#
##################################################

from RSIService_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
from ZSI.schema import GED, GTD
import ZSI

import util.callbacks as callbacks
import util.network.soap as soap

import ZSI.wstools.Namespaces as NS
from msn.SOAP import Namespaces as MSNS, MSNBindingSOAP

# Locator
class RSIServiceLocator:
    GetMetadataPort_address = "https://rsi.hotmail.com/rsi/rsi.asmx"
    def getGetMetadataPortAddress(self):
        return RSIServiceLocator.GetMetadataPort_address
    def getGetMetadataPort(self, url=None, **kw):
        return RSIBindingSOAP(url or RSIServiceLocator.GetMetadataPort_address, **kw)
    GetMessagePort_address = "https://rsi.hotmail.com/rsi/rsi.asmx"
    def getGetMessagePortAddress(self):
        return RSIServiceLocator.GetMessagePort_address
    def getGetMessagePort(self, url=None, **kw):
        return RSIBindingSOAP(url or RSIServiceLocator.GetMessagePort_address, **kw)
    DeleteMessagesPort_address = "https://rsi.hotmail.com/rsi/rsi.asmx"
    def getDeleteMessagesPortAddress(self):
        return RSIServiceLocator.DeleteMessagesPort_address
    def getDeleteMessagesPort(self, url=None, **kw):
        return RSIBindingSOAP(url or RSIServiceLocator.DeleteMessagesPort_address, **kw)

class RSIBinding(MSNBindingSOAP.BindingClass):
    def get_default_headers(self):
        headers = super(RSIBinding, self).get_default_headers()
        headers['Content-Type'] = 'text/xml; charset="utf-8"'
        return headers

# Methods
class RSIBindingSOAP(MSNBindingSOAP):
    BindingClass = RSIBinding
    # op: GetMetadata
    @callbacks.callsback
    def GetMetadata(self, request, soapheaders=(), callback = None, **kw):
        if isinstance(request, GetMetadataMessage) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        # TODO: Check soapheaders
        self.binding.Send(None, None, request, soapaction="http://www.hotmail.msn.com/ws/2004/09/oim/rsi/GetMetadata", soapheaders=soapheaders,
                          callback = callback,
                          **kw)
    # op: GetMessage
    @callbacks.callsback
    def GetMessage(self, request, soapheaders=(), callback = None, **kw):
        if isinstance(request, GetMessageMessage) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        # TODO: Check soapheaders
        self.binding.Send(None, None, request, soapaction="http://www.hotmail.msn.com/ws/2004/09/oim/rsi/GetMessage", soapheaders=soapheaders,
                          callback = callback,
                          **kw)

    # op: DeleteMessages
    @callbacks.callsback
    def DeleteMessages(self, request, soapheaders=(), callback = None, **kw):
        if isinstance(request, DeleteMessagesMessage) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        # TODO: Check soapheaders
        self.binding.Send(None, None, request, soapaction="http://www.hotmail.msn.com/ws/2004/09/oim/rsi/DeleteMessages", soapheaders=soapheaders,
                          callback = callback,
                         **kw)

GetMetadataMessage              = GED(MSNS.HMNS.RSI, "GetMetadata").pyclass
GetMetadataResponseMessage      = GED(MSNS.HMNS.RSI, "GetMetadataResponse").pyclass
GetMessageMessage               = GED(MSNS.HMNS.RSI, "GetMessage").pyclass
GetMessageResponseMessage       = GED(MSNS.HMNS.RSI, "GetMessageResponse").pyclass
DeleteMessagesMessage           = GED(MSNS.HMNS.RSI, "DeleteMessages").pyclass
DeleteMessagesResponseMessage   = GED(MSNS.HMNS.RSI, "DeleteMessagesResponse").pyclass
