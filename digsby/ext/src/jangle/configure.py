
import os
import sipconfig

# The name of the SIP build file generated by SIP and used by the build
# system.
build_file = "jangle.sbf"

import make_all_sip
make_all_sip.main()

# Get the SIP configuration information.
config = sipconfig.Configuration()

# Run SIP to generate the code.
os.system(" ".join([config.sip_bin, "-c", ".", "-b", build_file, '-t', 'WIN32_PLATFORM', "jangle.sip"]))

# Create the Makefile.
makefile = sipconfig.SIPModuleMakefile(config, build_file)

# Add the library we are wrapping.  The name doesn't include any platform
# specific prefixes or extensions (e.g. the "lib" prefix on UNIX, or the
# ".dll" extension on Windows).
makefile.extra_libs = ['libjingle', 'libexpat',
                       'ws2_32', #winsock 2
                       'advapi32', #? needed for talk/base/helpers.sip
                       'shell32',
                       'wininet',
                       'secur32',
                       'Crypt32',
                       ]
#comsupp.lib secur32.lib

makefile.extra_cxxflags.append('//EHsc')
makefile.extra_include_dirs.extend([r'C:\dev\libjingle',
                                    r'C:\Program Files (x86)\Expat 2.0.1\Source\lib'])
makefile.extra_lib_dirs.extend([r'C:\dev\libjingle\talk\Release',
                                r'C:\Program Files (x86)\Expat 2.0.1\Bin'])

#makefile.generator = "MINGW"
# Generate the Makefile itself.
makefile.generate()

import cache
cache.manage_cache('.', show_diffs=True)

