--- lib/file.c	2009-03-17 17:05:16.677172800 -0400
+++ lib/newfile.c	2009-03-17 17:19:33.654549300 -0400
@@ -35,6 +35,7 @@
 #include <time.h>
 #include <io.h>
 #include <fcntl.h>
+#include <wchar.h>
 #else
 #ifdef HAVE_SYS_SOCKET_H
 #include <sys/socket.h>
@@ -188,7 +189,9 @@
   int fd;
 #if defined(WIN32) || defined(MSDOS) || defined(__EMX__)
   int i;
+  int wchar_len;
   char *actual_path;
+  wchar_t* outbuf = 0;
 #endif
 
   if(!real_path)
@@ -246,7 +249,21 @@
     if(actual_path[i] == '/')
       actual_path[i] = '\\';
 
-  fd = open(actual_path, O_RDONLY | O_BINARY);  /* no CR/LF translation! */
+  /* assume URL encoded paths are UTF-8 and use _wopen if possible */
+  wchar_len = sizeof(wchar_t) * MultiByteToWideChar(CP_UTF8, 0, actual_path, -1, NULL, 0);
+
+  if (wchar_len && (outbuf = malloc(wchar_len)) &&
+      MultiByteToWideChar(CP_UTF8, MB_ERR_INVALID_CHARS, actual_path, -1, outbuf, wchar_len))
+  {
+      /* replace the old string with a new wchar_t one */
+      curl_free(real_path);
+
+      real_path = actual_path = (char*)outbuf;
+      fd = _wopen(outbuf, O_RDONLY | O_BINARY);
+  } else {
+      fd = open(actual_path, O_RDONLY | O_BINARY);
+  }
+
   file->path = actual_path;
 #else
   fd = open(real_path, O_RDONLY);
