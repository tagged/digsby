[buildout]
develop = cmdrunner
virtualenv = digsby-venv
bin-directory = .

home-dir = ${buildout:directory}\${buildout:virtualenv}
develop-eggs-directory = ${buildout:home-dir}\src
downloads-directory = ${buildout:home-dir}\downloads
eggs-directory = ${buildout:home-dir}\lib\site-packages
installed = ${buildout:home-dir}\.installed.cfg
parts-directory = ${buildout:home-dir}\parts
include-dir = ${buildout:home-dir}\PC
lib-dir = ${buildout:home-dir}\PCBuild
dlls-dir = ${buildout:home-dir}\DLLs

python_eggs-parts = python_eggs
gnu-libs-parts  = libiconv zlib freetype jpeg
OpenSSL-parts   = OpenSSL-checkout      OpenSSL-install
socks-parts     = socks-checkout        socks-install
oauth-parts     = oauth-checkout        oauth-install
simplejson-parts= simplejson-checkout   simplejson-install
protocols-parts = protocols-checkout    protocols-install
path_py-parts   = path_py-checkout      path_py-install
M2Crypto-parts  = M2Crypto-checkout     M2Crypto-install
ZSI-parts       = ZSI-checkout          ZSI-install
pysyck-parts    = pysyck-install
libxml2-parts   = libxml2-checkout      libxml2-build       libxml2-install
libxslt-parts   = libxslt-checkout      libxslt-patch       libxslt-build           libxslt-install
lxml-parts      = lxml-checkout         lxml-patch          lxml-install
jpeg-parts      = jpeg-checkout
PIL-parts       = PIL
py2exe-parts    = py2exe
comtypes-parts  = comtypes-checkout     comtypes-patch      comtypes-install
peak-parts      = peak

python-parts =
# Pure python stuff
        ${buildout:python_eggs-parts}
        ${buildout:pysyck-parts}
        ${buildout:socks-parts}
        ${buildout:path_py-parts}
        ${buildout:ZSI-parts}

parts =
        cmdrunner-install
        makedirs
        copy-python-libs
        ${buildout:python-parts}
        ${buildout:oauth-parts}
        ${buildout:gnu-libs-parts}
        ${buildout:PIL-parts}
        ${buildout:OpenSSL-parts}
        ${buildout:M2Crypto-parts}
        ${buildout:libxml2-parts}
        ${buildout:libxslt-parts}
        ${buildout:lxml-parts}
        ${buildout:py2exe-parts}
        ${buildout:comtypes-parts}
        ${buildout:simplejson-parts}
        ${buildout:protocols-parts}
        ${buildout:peak-parts}

#TODO: curl wx webkit wxpy cgui speedups blist

[cmdrunner-install]
recipe = cmdrunner
path = cmdrunner_install

[makedirs]
recipe = cmdrunner
check_return_code = false
on_install = true
on_update = true
cmds =
        mkdir "${buildout:downloads-directory}"
        mkdir "${buildout:include-dir}"
        mkdir "${buildout:lib-dir}"
        mkdir "${buildout:dlls-dir}"
        mkdir "${buildout:parts-directory}"

[copy-python-libs]
recipe = cmdrunner:py
on_install = true
on_update = true
cmds =
    >>> import distutils.sysconfig, shutil, os, os.path, glob
    >>> libs_dir = os.path.join(os.path.dirname(distutils.sysconfig.get_python_inc()), 'libs')
    >>> libs = glob.glob(os.path.join(libs_dir, '*.lib'))
    >>> for lib in libs:
    ...     shutil.copy(lib, buildout.get('buildout').get('lib-dir'))

[python_eggs]
recipe = cmdrunner
on_install = true
on_update = true
cmds =
        pip install distribute requests ClientForm Babel tenjin==0.8.1 certifi dnspython rauth feedparser==4.1

[libiconv]
recipe = cmdrunner
name = libiconv
version = 1.9.2-1
on_update = true
on_install = true

parts-dir = ${buildout:parts-directory}\${libiconv:name}

lib_foldername = ${libiconv:name}-${libiconv:version}-lib
lib_zipname = ${libiconv:lib_foldername}.zip
lib_download-path = "${buildout:downloads-directory}/${libiconv:lib_zipname}"
lib_url = "http://downloads.sourceforge.net/project/gnuwin32/${libiconv:name}/${libiconv:version}/${libiconv:lib_zipname}"

bin_foldername = ${libiconv:name}-${libiconv:version}-bin
bin_zipname = ${libiconv:bin_foldername}.zip
bin_download-path = "${buildout:downloads-directory}/${libiconv:bin_zipname}"
bin_url = "http://downloads.sourceforge.net/project/gnuwin32/${libiconv:name}/${libiconv:version}/${libiconv:bin_zipname}"

cmds =  curl -L ${libiconv:lib_url} --output ${libiconv:lib_download-path}
        curl -L ${libiconv:bin_url} --output ${libiconv:bin_download-path}
        unzip -o ${libiconv:lib_download-path} -d ${libiconv:parts-dir}
        unzip -o ${libiconv:bin_download-path} -d ${libiconv:parts-dir}
        cd ${libiconv:parts-dir}
        xcopy .\lib\* ${buildout:lib-dir} /S /i /y
        xcopy .\bin\* ${buildout:dlls-dir} /S /i /y
        xcopy .\include\* ${buildout:include-dir} /S /i /y
        cd ${buildout:dlls-dir}
        cp libiconv2.dll libiconv.dll
        cp libiconv2.dll iconv.dll
        cd ${buildout:lib-dir}
        cp libiconv.lib libiconv2.lib
        cp libiconv.lib iconv.lib

[zlib]
recipe = cmdrunner
name = zlib
version = 1.2.3
on_update = true
on_install = true

parts-dir = ${buildout:parts-directory}\${zlib:name}

lib_foldername = ${zlib:name}-${zlib:version}-lib
lib_zipname = ${zlib:lib_foldername}.zip
lib_download-path = "${buildout:downloads-directory}/${zlib:lib_zipname}"
lib_url = "http://downloads.sourceforge.net/project/gnuwin32/${zlib:name}/${zlib:version}/${zlib:lib_zipname}"

bin_foldername = ${zlib:name}-${zlib:version}-bin
bin_zipname = ${zlib:bin_foldername}.zip
bin_download-path = "${buildout:downloads-directory}/${zlib:bin_zipname}"
bin_url = "http://downloads.sourceforge.net/project/gnuwin32/${zlib:name}/${zlib:version}/${zlib:bin_zipname}"

cmds =  curl -L ${zlib:lib_url} --output ${zlib:lib_download-path}
        curl -L ${zlib:bin_url} --output ${zlib:bin_download-path}
        unzip -o ${zlib:lib_download-path} -d ${zlib:parts-dir}
        unzip -o ${zlib:bin_download-path} -d ${zlib:parts-dir}
        cd ${zlib:parts-dir}
        echo f | xcopy .\lib\zlib.lib .\lib\zlib1.lib /y
        xcopy .\lib\* ${buildout:lib-dir} /S /i /y
        xcopy .\bin\* ${buildout:dlls-dir} /S /i /y
        xcopy .\include\* ${buildout:include-dir} /S /i /y

[freetype]
recipe = cmdrunner
name = freetype
version = 2.3.5-1
on_update = true
on_install = true

parts-dir = ${buildout:parts-directory}\${freetype:name}

lib_foldername = ${freetype:name}-${freetype:version}-lib
lib_zipname = ${freetype:lib_foldername}.zip
lib_download-path = "${buildout:downloads-directory}/${freetype:lib_zipname}"
lib_url = "http://downloads.sourceforge.net/project/gnuwin32/${freetype:name}/${freetype:version}/${freetype:lib_zipname}"

bin_foldername = ${freetype:name}-${freetype:version}-bin
bin_zipname = ${freetype:bin_foldername}.zip
bin_download-path = "${buildout:downloads-directory}/${freetype:bin_zipname}"
bin_url = "http://downloads.sourceforge.net/project/gnuwin32/${freetype:name}/${freetype:version}/${freetype:bin_zipname}"

cmds =  curl -L ${freetype:lib_url} --output ${freetype:lib_download-path}
        curl -L ${freetype:bin_url} --output ${freetype:bin_download-path}
        unzip -o ${freetype:lib_download-path} -d ${freetype:parts-dir}
        unzip -o ${freetype:bin_download-path} -d ${freetype:parts-dir}
        cd ${freetype:parts-dir}
        xcopy .\lib\* ${buildout:lib-dir} /S /i /y
        xcopy .\bin\* ${buildout:dlls-dir} /S /i /y
        xcopy .\include\* ${buildout:include-dir} /S /i /y

[jpeg]
recipe = cmdrunner
name = jpeg
version = 6b-4
on_update = true
on_install = true

parts-dir = ${buildout:parts-directory}\${jpeg:name}

lib_foldername = ${jpeg:name}-${jpeg:version}-lib
lib_zipname = ${jpeg:lib_foldername}.zip
lib_download-path = "${buildout:downloads-directory}/${jpeg:lib_zipname}"
lib_url = "http://downloads.sourceforge.net/project/gnuwin32/${jpeg:name}/${jpeg:version}/${jpeg:lib_zipname}"

bin_foldername = ${jpeg:name}-${jpeg:version}-bin
bin_zipname = ${jpeg:bin_foldername}.zip
bin_download-path = "${buildout:downloads-directory}/${jpeg:bin_zipname}"
bin_url = "http://downloads.sourceforge.net/project/gnuwin32/${jpeg:name}/${jpeg:version}/${jpeg:bin_zipname}"

cmds =  curl -L ${jpeg:lib_url} --output ${jpeg:lib_download-path}
        curl -L ${jpeg:bin_url} --output ${jpeg:bin_download-path}
        unzip -o ${jpeg:lib_download-path} -d ${jpeg:parts-dir}
        unzip -o ${jpeg:bin_download-path} -d ${jpeg:parts-dir}
        cd ${jpeg:parts-dir}
        xcopy .\lib\* ${buildout:lib-dir} /S /i /y
        xcopy .\bin\* ${buildout:dlls-dir} /S /i /y
        xcopy .\include\* ${buildout:include-dir} /S /i /y

[OpenSSL-checkout]
recipe = zerokspot.recipe.git
repository = https://github.com/kevinw/openssl-setup-py.git
rev = origin/master

[OpenSSL-install]
recipe = cmdrunner
on_install = true
on_update = true
cmds =  cd ${buildout:parts-directory}/OpenSSL-checkout
        python setup.py install
        cd ${buildout:home-dir}
        xcopy libs ${buildout:lib-dir} /i /y /S

[path_py-checkout]
recipe = zerokspot.recipe.git
repository = https://github.com/mikedougherty/path.py.git
ref = origin/master

[path_py-install]
recipe = cmdrunner
on_update = true
on_install = true
cmds =  cd ${buildout:parts-directory}/path_py-checkout
        python setup.py install

[ZSI-checkout]
recipe = zerokspot.recipe.git
repository = https://github.com/mikedougherty/ZSI.git
ref = origin/master

[ZSI-install]
recipe = cmdrunner
on_update = true
on_install = true
cmds =  cd ${buildout:parts-directory}/ZSI-checkout
        python setup.py install

[socks-checkout]
recipe = zerokspot.recipe.git
repository = https://github.com/mikedougherty/SocksiPy.git
ref = origin/master

[socks-install]
recipe = cmdrunner
on_update = true
on_install = true
cmds =  cd ${buildout:parts-directory}/socks-checkout
        python setup.py install

[oauth-checkout]
recipe = zerokspot.recipe.git
repository = https://github.com/mikedougherty/oauth.py.git
ref = origin/master

[oauth-install]
recipe = cmdrunner
on_update = true
on_install = true
cmds =  cd ${buildout:parts-directory}/oauth-checkout
        python setup.py install

[simplejson-checkout]
recipe = zerokspot.recipe.git
repository = https://github.com/mikedougherty/simplejson.git
branch = digsby

[simplejson-install]
recipe = cmdrunner
on_update = true
on_install = true
cmds =  cd ${buildout:parts-directory}/simplejson-checkout
        python setup.py install

[M2Crypto-checkout]
recipe = zerokspot.recipe.git
repository = https://github.com/mikedougherty/M2Crypto.git
ref = origin/master

[M2Crypto-install]
recipe = cmdrunner
on_update = true
on_install = true
cmds =  cd ${buildout:parts-directory}/M2Crypto-checkout
        python setup.py install

[pysyck-install]
recipe = cmdrunner
on_update = true
on_install = true
cmds = cd  ${buildout:directory}/builddeps/msvc2008
       unzip -o pysyck_msvc2008_26.zip
       xcopy .\syck ${buildout:eggs-directory}\syck /i /y /S
       xcopy .\_syck.pyd ${buildout:dlls-dir} /y /S /i

[libxml2-checkout]
recipe = zerokspot.recipe.git
repository = https://github.com/mikedougherty/libxml2.git
ref = origin/master

[libxml2-build]
recipe = cmdrunner
on_update = true
on_install = true
cmds =  cd ${buildout:parts-directory}/libxml2-checkout/win32
        cscript configure.js //E:Javascript vcmanifest=yes python=yes include="${buildout:include-dir}"  lib="${buildout:lib-dir}"
        nmake -f Makefile.msvc
        xcopy bin.msvc ..\bin /S /i /y
        cd ..
        echo f | xcopy ${buildout:dlls-dir}\libiconv.dll .\bin\iconv.dll /S /y
        xcopy .\bin\*.lib ${buildout:lib-dir} /S /i /y
        xcopy .\bin\*.dll ${buildout:dlls-dir} /S /i /y
        xcopy .\include ${buildout:include-dir} /S /i /y
        xcopy .\bin .\python\bin /S /i /y

[libxml2-install]
recipe = cmdrunner
on_update = true
on_install = true
cmds =  cd ${buildout:parts-directory}/libxml2-checkout/python
        set INCLUDE=${buildout:include-dir}
        set LIB=${buildout:lib-dir}
        python setup.py build_ext install --install-lib="${buildout:eggs-directory}"

[libxslt-checkout]
recipe = cmdrunner
foldername = libxslt-1.1.24
filename = ${libxslt-checkout:foldername}.tar.gz
download-path = ${buildout:downloads-directory}/${libxslt-checkout:filename}
url = http://xmlsoft.org/sources/${libxslt-checkout:filename}
parts-dir = ${buildout:parts-directory}\${libxslt-checkout:foldername}
on_update = true
on_install = true
cmds =  cd ${buildout:downloads-directory}
        curl -L ${libxslt-checkout:url} --output ${libxslt-checkout:download-path}
        tar -xzf ${libxslt-checkout:filename}
        xcopy .\${libxslt-checkout:foldername} ${libxslt-checkout:parts-dir} /S /i /y
        cd ${libxslt-checkout:parts-dir}\win32
        cscript configure.js //E:Javascript vcmanifest=yes include="${buildout:include-dir}"  lib="${buildout:lib-dir}"

[libxslt-patch]
recipe = collective.recipe.patch
path = ${buildout:parts-directory}
patches = ${buildout:directory}\digsby\build\patches\libxslt-processOneNode.patch

[libxslt-build]
recipe = cmdrunner
on_update = true
on_install = true
cmds =  cd ${libxslt-checkout:parts-dir}\win32
        nmake -f Makefile.msvc

[libxslt-install]
recipe = cmdrunner
on_update = true
on_install = true
cmds =  cd ${libxslt-checkout:parts-dir}\win32
        xcopy bin.msvc\*.lib ${buildout:lib-dir} /S /i /y
        xcopy bin.msvc\*.dll ${buildout:dlls-dir} /S /i /y
        cd ..
        xcopy libxslt\*.h ${buildout:include-dir}\libxslt /S /i /y
        xcopy libexslt\*.h ${buildout:include-dir}\libexslt /S /i /y

[protocols-checkout]
recipe = zerokspot.recipe.git
repository = https://github.com/mikedougherty/PyProtocols.git
rev = origin/master

[protocols-install]
recipe = cmdrunner
on_update = true
on_install = true
cmds =  cd ${buildout:parts-directory}/protocols-checkout
        python setup.py install

[jpeg-checkout]
recipe = cmdrunner
on_update = true
on_install = true
foldername = jpegsrc.v7
filename = ${jpeg-checkout:foldername}.tar.gz
download-path = ${buildout:downloads-directory}/${jpeg-checkout:filename}
url = http://www.ijg.org/files/${jpeg-checkout:filename}
parts-dir = ${buildout:parts-directory}\${jpeg-checkout:foldername}

[PIL]
recipe = cmdrunner
on_update = true
on_install = true
foldername = Imaging-1.1.6
filename = ${PIL:foldername}.tar.gz
download-path = ${buildout:downloads-directory}/${PIL:filename}
url = http://effbot.org/media/downloads/${PIL:filename}
parts-dir = ${buildout:parts-directory}\${PIL:foldername}

cmds =  cd ${buildout:downloads-directory}
        curl -L ${PIL:url} --output ${PIL:download-path}
        tar -xzf ${PIL:filename}
        touch ${buildout:include-dir}\unistd.h
        xcopy .\${PIL:foldername} ${PIL:parts-dir} /S /i /y
        cd ${PIL:parts-dir}
        python setup.py install --install-lib="${buildout:eggs-directory}" --install-scripts="${buildout:home-dir}\Scripts"
        xcopy .\build\lib.win32-2.6\*.pyd ${buildout:dlls-dir} /S /i /y

[lxml-checkout]
recipe = cmdrunner
on_update = true
on_install = true

foldername = lxml-2.2
filename = ${lxml-checkout:foldername}.tar.gz
download-path = ${buildout:downloads-directory}/${lxml-checkout:filename}
url = http://pypi.python.org/packages/source/l/lxml/${lxml-checkout:filename}
parts-dir = ${buildout:parts-directory}\${lxml-checkout:foldername}

cmds =
        cd ${buildout:downloads-directory}
        curl -L ${lxml-checkout:url} --output ${lxml-checkout:download-path}
        tar -xzf ${lxml-checkout:filename}
        xcopy .\${lxml-checkout:foldername} ${lxml-checkout:parts-dir} /S /i /y

[lxml-patch]
recipe = cmdrunner
on_install = true
on_update = true
cmds =
        cd ${lxml-checkout:parts-dir}
        patch -p0 -f -i ${buildout:directory}\digsby\build\patches\lxml.patch

[lxml-install]
recipe = cmdrunner
on_update = true
on_install = true
cmds =
        cd ${lxml-checkout:parts-dir}
        python setup.py build
        xcopy .\build\lib.win32-2.6\lxml\*.pyd ${buildout:dlls-dir} /S /i /y
        python setup.py install --install-lib="${buildout:eggs-directory}"

[py2exe]
recipe = cmdrunner
name = py2exe
version = 0.6.9
on_update = true
on_install = true

parts-dir = ${buildout:parts-directory}\${py2exe:name}
foldername = ${py2exe:name}-${py2exe:version}
zipname = ${py2exe:foldername}.zip
download-path = "${buildout:downloads-directory}/${py2exe:zipname}"
url = "http://downloads.sourceforge.net/project/py2exe/${py2exe:name}/${py2exe:version}/${py2exe:zipname}"

cmds =  curl -L ${py2exe:url} --output ${py2exe:download-path}
        unzip -o ${py2exe:download-path} -d ${py2exe:parts-dir}
        cd ${py2exe:parts-dir}\${py2exe:foldername}
        python setup.py install

[comtypes-checkout]
recipe = cmdrunner
name = comtypes
version = 0.6.0
on_update = true
on_install = true

parts-dir = ${buildout:parts-directory}\${comtypes-checkout:name}
foldername = ${comtypes-checkout:name}-${comtypes-checkout:version}
zipname = ${comtypes-checkout:foldername}.zip
download-path = "${buildout:downloads-directory}/${comtypes-checkout:zipname}"
url = "http://downloads.sourceforge.net/project/${comtypes-checkout:name}/${comtypes-checkout:name}/${comtypes-checkout:version}/${comtypes-checkout:zipname}"
cmds =
        curl -L ${comtypes-checkout:url} --output ${comtypes-checkout:download-path}
        unzip -o ${comtypes-checkout:download-path} -d ${comtypes-checkout:parts-dir}

[comtypes-patch]
recipe = cmdrunner
on_update = true
on_install = true
cmds =
        cd ${comtypes-checkout:parts-dir}\${comtypes-checkout:foldername}
        patch -p0 -f -i ${buildout:directory}\digsby\build\msw\comtypes.0.6.0.patch

[comtypes-install]
recipe = cmdrunner
on_update = true
on_install = true
cmds =
        cd ${comtypes-checkout:parts-dir}\${comtypes-checkout:foldername}
        ls
        python setup.py install

[peak]
recipe = cmdrunner
name = peak
on_update = true
on_install = true

parts-dir = ${buildout:parts-directory}\${peak:name}
# TODO: how to get this foldername out of here?
foldername = mikedougherty-peak-1b70df9
zipname = ${peak:name}.zip
download-path = "${buildout:downloads-directory}/${peak:zipname}"
url = https://github.com/mikedougherty/peak/zipball/digsby

cmds =
        curl -L ${peak:url} --output ${peak:download-path}
        unzip -o ${peak:download-path} -d ${peak:parts-dir}
        xcopy ${peak:parts-dir}\${peak:foldername} ${buildout:eggs-directory}\peak /S /i /y
